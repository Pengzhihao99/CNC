<#@ template debug="false" hostspecific="true" language="C#" #>
<#@ output extension=".tt.cs" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ import namespace="System.Xml" #>
<#@ assembly name="System.Xml.dll" #>
<# 
EnvDTE.DTE dte = (EnvDTE.DTE) ((IServiceProvider) this.Host).GetService(typeof(EnvDTE.DTE));     
string xmlFile = System.IO.Path.Combine(dte.ActiveDocument.Path, "Error.xml");
XmlDocument xmlDoc = new XmlDocument();
xmlDoc.Load(xmlFile);  
#>
using System;

namespace MessageCore.Infrastructure.Exceptions
{	
	public static class ErrorCode
    {
		public static class NumbericCode
		{
		<#foreach (XmlNode node in xmlDoc.SelectNodes("//ErrorCode")) { #>
    /// <summary>
			/// <#= node.Attributes["Message"].Value #>
			/// </summary>
			public const int <#= node.Attributes["Name"].Value #> = unchecked((int)0x<#= node.Attributes["Code"].Value #>);

		<#}#>
}

		public static class StringCode
		{
		<#foreach (XmlNode node in xmlDoc.SelectNodes("//ErrorCode")) { #>
	/// <summary>
			/// <#= node.Attributes["Message"].Value #>
			/// </summary>
			public const string <#= node.Attributes["Name"].Value #> = "<#= node.Attributes["Code"].Value #>";

		<#}#>
}

        public static string ToHex(this int value)
        {
            return "0x" + value.ToString("X");
        }
    }
}
